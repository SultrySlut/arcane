-- Waypoint System with GUI Manager
-- Press = to place waypoint, automatically places death markers

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- Configuration
local WAYPOINT_KEY = Enum.KeyCode.Equals
local WAYPOINT_COLOR = Color3.fromRGB(100, 200, 255)
local DEATH_COLOR = Color3.fromRGB(255, 100, 100)
local WAYPOINT_SIZE = Vector3.new(4, 4, 4)
local BEAM_HEIGHT = 1000

-- Storage
local waypoints = {}
local waypointCounter = 1
local deathCounter = 1
local waypointFolder = nil
local guiOpen = false

-- Create waypoint folder in workspace
local function createWaypointFolder()
    waypointFolder = Workspace:FindFirstChild("PlayerWaypoints")
    if not waypointFolder then
        waypointFolder = Instance.new("Folder")
        waypointFolder.Name = "PlayerWaypoints"
        waypointFolder.Parent = Workspace
    end
end

-- Create main GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "WaypointSystemGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game:GetService("CoreGui")

-- Toggle button (always visible)
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 150, 0, 40)
ToggleButton.Position = UDim2.new(0, 10, 0.5, -20)
ToggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ToggleButton.BorderSizePixel = 0
ToggleButton.Text = "Waypoints [=]"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextScaled = true
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.Parent = ScreenGui

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 8)
ToggleCorner.Parent = ToggleButton

-- Main frame (hidden initially)
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 400, 0, 500)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Visible = false
MainFrame.Parent = ScreenGui

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

-- Title bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 40)
TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = TitleBar

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(1, -40, 1, 0)
TitleLabel.Position = UDim2.new(0, 10, 0, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "Waypoint Manager"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextScaled = true
TitleLabel.Font = Enum.Font.SourceSansBold
TitleLabel.Parent = TitleBar

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextScaled = true
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.Parent = TitleBar

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 6)
CloseCorner.Parent = CloseButton

-- Scrolling frame for waypoint list
local ScrollFrame = Instance.new("ScrollingFrame")
ScrollFrame.Size = UDim2.new(1, -20, 1, -50)
ScrollFrame.Position = UDim2.new(0, 10, 0, 45)
ScrollFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
ScrollFrame.BorderSizePixel = 0
ScrollFrame.ScrollBarThickness = 6
ScrollFrame.Parent = MainFrame

local ScrollCorner = Instance.new("UICorner")
ScrollCorner.CornerRadius = UDim.new(0, 8)
ScrollCorner.Parent = ScrollFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)
UIListLayout.Parent = ScrollFrame

-- Create waypoint visual
local function createWaypointVisual(position, name, color)
    local waypointModel = Instance.new("Model")
    waypointModel.Name = name
    waypointModel.Parent = waypointFolder
    
    -- Base part
    local basePart = Instance.new("Part")
    basePart.Name = "Base"
    basePart.Size = WAYPOINT_SIZE
    basePart.Position = position
    basePart.Anchored = true
    basePart.CanCollide = false
    basePart.Material = Enum.Material.ForceField
    basePart.BrickColor = BrickColor.new(color)
    basePart.Transparency = 0.3
    basePart.Shape = Enum.PartType.Ball
    basePart.Parent = waypointModel
    
    -- Beam part (vertical line)
    local beamPart = Instance.new("Part")
    beamPart.Name = "Beam"
    beamPart.Size = Vector3.new(0.5, BEAM_HEIGHT, 0.5)
    beamPart.Position = position + Vector3.new(0, BEAM_HEIGHT/2, 0)
    beamPart.Anchored = true
    beamPart.CanCollide = false
    beamPart.Material = Enum.Material.Neon
    beamPart.BrickColor = BrickColor.new(color)
    beamPart.Transparency = 0.5
    beamPart.Parent = waypointModel
    
    -- Billboard GUI
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Size = UDim2.new(0, 150, 0, 50)
    billboardGui.StudsOffset = Vector3.new(0, 5, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.Parent = basePart
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 0.3
    nameLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    nameLabel.Text = name
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.Parent = billboardGui
    
    local labelCorner = Instance.new("UICorner")
    labelCorner.CornerRadius = UDim.new(0, 8)
    labelCorner.Parent = nameLabel
    
    return waypointModel
end

-- Create waypoint entry in GUI
local function createWaypointEntry(waypoint)
    local entryFrame = Instance.new("Frame")
    entryFrame.Size = UDim2.new(1, 0, 0, 60)
    entryFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    entryFrame.BorderSizePixel = 0
    entryFrame.Parent = ScrollFrame
    
    local entryCorner = Instance.new("UICorner")
    entryCorner.CornerRadius = UDim.new(0, 8)
    entryCorner.Parent = entryFrame
    
    -- Waypoint name
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(0.4, 0, 0.5, 0)
    nameLabel.Position = UDim2.new(0, 10, 0, 5)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = waypoint.name
    nameLabel.TextColor3 = waypoint.isDeath and DEATH_COLOR or WAYPOINT_COLOR
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.TextXAlignment = Enum.TextXAlignment.Left
    nameLabel.Parent = entryFrame
    
    -- Position label
    local posLabel = Instance.new("TextLabel")
    posLabel.Size = UDim2.new(0.4, 0, 0.4, 0)
    posLabel.Position = UDim2.new(0, 10, 0.5, 0)
    posLabel.BackgroundTransparency = 1
    posLabel.Text = string.format("(%.0f, %.0f, %.0f)", waypoint.position.X, waypoint.position.Y, waypoint.position.Z)
    posLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
    posLabel.TextScaled = true
    posLabel.Font = Enum.Font.SourceSans
    posLabel.TextXAlignment = Enum.TextXAlignment.Left
    posLabel.Parent = entryFrame
    
    -- View button
    local viewButton = Instance.new("TextButton")
    viewButton.Size = UDim2.new(0, 50, 0, 30)
    viewButton.Position = UDim2.new(1, -180, 0.5, -15)
    viewButton.BackgroundColor3 = waypoint.visible and Color3.fromRGB(100, 200, 100) or Color3.fromRGB(100, 100, 100)
    viewButton.Text = waypoint.visible and "Hide" or "Show"
    viewButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    viewButton.TextScaled = true
    viewButton.Font = Enum.Font.SourceSans
    viewButton.Parent = entryFrame
    
    local viewCorner = Instance.new("UICorner")
    viewCorner.CornerRadius = UDim.new(0, 6)
    viewCorner.Parent = viewButton
    
    -- Teleport button
    local tpButton = Instance.new("TextButton")
    tpButton.Size = UDim2.new(0, 50, 0, 30)
    tpButton.Position = UDim2.new(1, -120, 0.5, -15)
    tpButton.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
    tpButton.Text = "TP"
    tpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tpButton.TextScaled = true
    tpButton.Font = Enum.Font.SourceSans
    tpButton.Parent = entryFrame
    
    local tpCorner = Instance.new("UICorner")
    tpCorner.CornerRadius = UDim.new(0, 6)
    tpCorner.Parent = tpButton
    
    -- Delete button
    local deleteButton = Instance.new("TextButton")
    deleteButton.Size = UDim2.new(0, 50, 0, 30)
    deleteButton.Position = UDim2.new(1, -60, 0.5, -15)
    deleteButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
    deleteButton.Text = "X"
    deleteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    deleteButton.TextScaled = true
    deleteButton.Font = Enum.Font.SourceSansBold
    deleteButton.Parent = entryFrame
    
    local deleteCorner = Instance.new("UICorner")
    deleteCorner.CornerRadius = UDim.new(0, 6)
    deleteCorner.Parent = deleteButton
    
    -- Button functions
    viewButton.MouseButton1Click:Connect(function()
        waypoint.visible = not waypoint.visible
        waypoint.visual.Parent = waypoint.visible and waypointFolder or nil
        viewButton.Text = waypoint.visible and "Hide" or "Show"
        viewButton.BackgroundColor3 = waypoint.visible and Color3.fromRGB(100, 200, 100) or Color3.fromRGB(100, 100, 100)
    end)
    
    tpButton.MouseButton1Click:Connect(function()
        local character = LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.CFrame = CFrame.new(waypoint.position + Vector3.new(0, 5, 0))
        end
    end)
    
    deleteButton.MouseButton1Click:Connect(function()
        -- Remove from waypoints table
        for i, wp in ipairs(waypoints) do
            if wp == waypoint then
                table.remove(waypoints, i)
                break
            end
        end
        
        -- Destroy visual and GUI entry
        if waypoint.visual then
            waypoint.visual:Destroy()
        end
        entryFrame:Destroy()
        
        -- Update scroll canvas size
        ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
    end)
    
    waypoint.guiEntry = entryFrame
    
    -- Update scroll canvas size
    ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
end

-- Create waypoint
local function createWaypoint(position, name, isDeath)
    local waypoint = {
        name = name,
        position = position,
        isDeath = isDeath,
        visible = true,
        visual = createWaypointVisual(position, name, isDeath and DEATH_COLOR or WAYPOINT_COLOR)
    }
    
    table.insert(waypoints, waypoint)
    createWaypointEntry(waypoint)
    
    return waypoint
end

-- Place waypoint at current position
local function placeWaypoint()
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local position = character.HumanoidRootPart.Position
        local name = "Waypoint " .. waypointCounter
        waypointCounter = waypointCounter + 1
        
        createWaypoint(position, name, false)
        
        -- Notification
        game.StarterGui:SetCore("SendNotification", {
            Title = "Waypoint Placed",
            Text = name .. " at current position",
            Duration = 2
        })
    end
end

-- Place death waypoint
local function placeDeathWaypoint(position)
    local name = "Death " .. deathCounter
    deathCounter = deathCounter + 1
    
    createWaypoint(position, name, true)
    
    -- Notification
    game.StarterGui:SetCore("SendNotification", {
        Title = "Death Marker",
        Text = name .. " placed",
        Duration = 2
    })
end

-- Toggle GUI
local function toggleGUI()
    guiOpen = not guiOpen
    MainFrame.Visible = guiOpen
    
    if guiOpen then
        -- Refresh GUI
        for _, child in pairs(ScrollFrame:GetChildren()) do
            if child:IsA("Frame") then
                child:Destroy()
            end
        end
        
        for _, waypoint in ipairs(waypoints) do
            createWaypointEntry(waypoint)
        end
    end
end

-- Setup death detection
local function setupDeathDetection()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    
    local deathPosition = nil
    
    -- Store position when health reaches 0
    humanoid.Died:Connect(function()
        if character:FindFirstChild("HumanoidRootPart") then
            deathPosition = character.HumanoidRootPart.Position
        end
    end)
    
    -- Place waypoint when respawning
    LocalPlayer.CharacterAdded:Connect(function(newCharacter)
        if deathPosition then
            wait(0.5) -- Small delay to ensure character loads
            placeDeathWaypoint(deathPosition)
            deathPosition = nil
        end
        
        -- Setup for next death
        setupDeathDetection()
    end)
end

-- Input handling
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == WAYPOINT_KEY then
        placeWaypoint()
    end
end)

-- GUI button events
ToggleButton.MouseButton1Click:Connect(toggleGUI)
CloseButton.MouseButton1Click:Connect(function()
    guiOpen = false
    MainFrame.Visible = false
end)

-- Make frame draggable
local dragging = false
local dragStart = nil
local startPos = nil

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Initialize
createWaypointFolder()
setupDeathDetection()

-- Notification
game.StarterGui:SetCore("SendNotification", {
    Title = "Waypoint System Active",
    Text = "Press = to place waypoint",
    Duration = 3
})